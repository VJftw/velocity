-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Compiled.Object.Project exposing (BranchesOptionalArguments, address, branches, defaultBranch, id, insertedAt, name, slug, updatedAt)

import Api.Compiled.InputObject
import Api.Compiled.Interface
import Api.Compiled.Object
import Api.Compiled.Scalar
import Api.Compiled.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


address : SelectionSet String Api.Compiled.Object.Project
address =
    Object.selectionForField "String" "address" [] Decode.string


type alias BranchesOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


branches : (BranchesOptionalArguments -> BranchesOptionalArguments) -> SelectionSet decodesTo Api.Compiled.Object.BranchConnection -> SelectionSet (Maybe decodesTo) Api.Compiled.Object.Project
branches fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "branches" optionalArgs object_ (identity >> Decode.nullable)


defaultBranch : SelectionSet decodesTo Api.Compiled.Object.Branch -> SelectionSet decodesTo Api.Compiled.Object.Project
defaultBranch object_ =
    Object.selectionForCompositeField "defaultBranch" [] object_ identity


{-| The ID of an object
-}
id : SelectionSet Api.Compiled.Scalar.Id Api.Compiled.Object.Project
id =
    Object.selectionForField "Scalar.Id" "id" [] (Object.scalarDecoder |> Decode.map Api.Compiled.Scalar.Id)


insertedAt : SelectionSet Api.Compiled.Scalar.NaiveDateTime Api.Compiled.Object.Project
insertedAt =
    Object.selectionForField "Scalar.NaiveDateTime" "insertedAt" [] (Object.scalarDecoder |> Decode.map Api.Compiled.Scalar.NaiveDateTime)


name : SelectionSet String Api.Compiled.Object.Project
name =
    Object.selectionForField "String" "name" [] Decode.string


slug : SelectionSet String Api.Compiled.Object.Project
slug =
    Object.selectionForField "String" "slug" [] Decode.string


updatedAt : SelectionSet Api.Compiled.Scalar.NaiveDateTime Api.Compiled.Object.Project
updatedAt =
    Object.selectionForField "Scalar.NaiveDateTime" "updatedAt" [] (Object.scalarDecoder |> Decode.map Api.Compiled.Scalar.NaiveDateTime)
