-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Compiled.Mutation exposing (CreateKnownHostRequiredArguments, CreateProjectRequiredArguments, SignInRequiredArguments, VerifyKnownHostRequiredArguments, createKnownHost, createProject, signIn, verifyKnownHost)

import Api.Compiled.InputObject
import Api.Compiled.Interface
import Api.Compiled.Object
import Api.Compiled.Scalar
import Api.Compiled.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CreateKnownHostRequiredArguments =
    { host : String }


{-| Create unverified known host
-}
createKnownHost : CreateKnownHostRequiredArguments -> SelectionSet decodesTo Api.Compiled.Object.KnownHostPayload -> SelectionSet decodesTo RootMutation
createKnownHost requiredArgs object_ =
    Object.selectionForCompositeField "createKnownHost" [ Argument.required "host" requiredArgs.host Encode.string ] object_ identity


type alias CreateProjectRequiredArguments =
    { address : String }


{-| Create project
-}
createProject : CreateProjectRequiredArguments -> SelectionSet decodesTo Api.Compiled.Object.ProjectPayload -> SelectionSet decodesTo RootMutation
createProject requiredArgs object_ =
    Object.selectionForCompositeField "createProject" [ Argument.required "address" requiredArgs.address Encode.string ] object_ identity


type alias SignInRequiredArguments =
    { password : String
    , username : String
    }


{-| Sign in
-}
signIn : SignInRequiredArguments -> SelectionSet decodesTo Api.Compiled.Object.SessionPayload -> SelectionSet decodesTo RootMutation
signIn requiredArgs object_ =
    Object.selectionForCompositeField "signIn" [ Argument.required "password" requiredArgs.password Encode.string, Argument.required "username" requiredArgs.username Encode.string ] object_ identity


type alias VerifyKnownHostRequiredArguments =
    { id : String }


{-| Verify a known host
-}
verifyKnownHost : VerifyKnownHostRequiredArguments -> SelectionSet decodesTo Api.Compiled.Object.KnownHostPayload -> SelectionSet decodesTo RootMutation
verifyKnownHost requiredArgs object_ =
    Object.selectionForCompositeField "verifyKnownHost" [ Argument.required "id" requiredArgs.id Encode.string ] object_ identity
