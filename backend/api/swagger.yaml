swagger: "2.0"
externalDocs:
  description: "Velocity CI"
  url: "https://velocityci.io"
info:
  description: "This is the API specification for Velocity CI's Architect component."
  version: "1.0.0"
  title: "Velocity CI"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
basePath: "/v1"
schemes:
- "http"
paths:
  # Users
  "/users":
    get:
      summary: "List users"
      operationId: "listUsers"
      tags:
        - "user"
      security:
      - Bearer: []
      parameters:
      - in: "query"
        name: "limit"
        type: "integer"
        description: "The numbers of items to return"
      - in: "query"
        name: "page"
        type: "integer"
        description: "The page of results to return"
      produces:
      - "application/json"
      responses:
        200: 
          description: "OK"
          schema:
            $ref: "#/definitions/UserList"
    post:
      summary: "Create user"
      tags:
      - "user"
      operationId: "createUser"
      security:
      - Bearer: []
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "The user to create"
        schema:
          type: "object"
          required:
            - "username"
            - "password"
          properties:
            username:
              type: "string"
            password:
              type: "string"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/User"
          
  "/users/{username}":
    parameters:
        - name: "username"
          in: "path"
          description: "The username"
          type: "string"
          required: true
    get:
      tags:
      - "user"
      summary: "Get user by username"
      operationId: "getUserByUsername"
      security:
      - Bearer: []
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "User not found"
    delete:
      summary: "Delete user"
      description: "This can only be done by the logged in user"
      operationId: "deleteUser"
      security:
      - Bearer: []
      tags:
      - "user"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
        404:
          description: "User not found"

  # Known Hosts
  "/ssh/known-hosts":
    get:
      summary: "List known hosts"
      operationId: "listKnownHosts"
      tags:
      - "known-host"
      security:
      - Bearer: []
      parameters:
      - in: "query"
        name: "limit"
        type: "integer"
        description: "The numbers of items to return"
      - in: "query"
        name: "page"
        type: "integer"
        description: "The page of results to return"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/KnownHostList"
    post:
      summary: "Create known host"
      operationId: "createKnownHost"
      tags:
      - "known-host"
      security:
      - Bearer: []
      produces: 
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "entry"
        description: "The output of `ssh-keyscan <host>`"
        schema:
          type: "object"
          required: 
          - "entry"
          properties:
            entry:
              type: "string"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/KnownHost"
            
  # Projects
  "/projects":
    get:
      summary: "List projects"
      operationId: "listProjects"
      tags:
      - "project"
      security: 
      - Bearer: []
      parameters:
      - in: "query"
        name: "limit"
        type: "integer"
        description: "The numbers of items to return"
      - in: "query"
        name: "page"
        type: "integer"
        description: "The page of results to return"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ProjectList"
    post:
      summary: "Create project"
      operationId: "createProject"
      tags:
      - "project"
      security: 
      - Bearer: []
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "project"
        description: "The project to create"
        schema:
          type: "object"
          required:
            - "name"
            - "address"
          properties:
            name:
              type: "string"
            address:
              type: "string"
            key:
              type: "string"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Project"
            
  "/projects/{projectSlug}":
    parameters:
    - name: "projectSlug"
      in: "path"
      description: "The project slug"
      type: "string"
      required: true
    get:
      tags:
      - "project"
      summary: "Get project by slug"
      operationId: "getProjectBySlug"
      security: 
      - Bearer: []
      produces: 
      - "application/json"
      responses:
        200:
          description: "OK"
          schema: 
            $ref: "#/definitions/Project"
        404:
          description: "Not found"
          
  "/projects/{projectSlug}/sync":
    parameters:
    - name: "projectSlug"
      in: "path"
      description: "The project slug"
      type: "string"
      required: true
    post:
      tags:
      - "project"
      summary: "Synchronises project"
      operationId: "synchroniseProject"
      security: 
      - Bearer: []
      responses:
        201:
          description: "Synchronisation started"
  
  # Branches
  "/projects/{projectSlug}/branches":
    parameters: 
    - name: "projectSlug"
      in: "path"
      description: "The project slug"
      type: "string"
      required: true
    get:
      tags:
      - "branch"
      summary: "Get branches for a project"
      operationId: "getBranchesForProject"
      security: 
      - Bearer: []
      parameters:
      - in: "query"
        name: "limit"
        type: "integer"
        description: "The numbers of items to return"
      - in: "query"
        name: "page"
        type: "integer"
        description: "The page of results to return"
      produces: 
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BranchList"
        404:
          description: "Not found"
          
  "/projects/{projectSlug}/branches/{branchName}":
    parameters: 
    - name: "projectSlug"
      in: "path"
      description: "The project slug"
      type: "string"
      required: true
    - name: "branchName"
      in: "path"
      description: "The branch name"
      type: "string"
      required: true
    get:
      tags:
      - "branch"
      summary: "Gets branch for a project and branch name"
      operationId: "getBranchForProjectByBranchName"
      security: 
      - Bearer: []
      produces: 
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Branch"
        404:
          description: "Not found"
          
  "/projects/{projectSlug}/branches/{branchName}/commits":
    parameters: 
    - name: "projectSlug"
      in: "path"
      description: "The project slug"
      type: "string"
      required: true
    - name: "branchName"
      in: "path"
      description: "The branch name"
      type: "string"
      required: true
    get:
      tags:
      - "commit"
      summary: "Gets commits for a project and branch name"
      operationId: "getCommitsForProjectAndBranchName"
      security: 
      - Bearer: []
      parameters:
      - in: "query"
        name: "limit"
        type: "integer"
        description: "The numbers of items to return"
      - in: "query"
        name: "page"
        type: "integer"
        description: "The page of results to return"
      produces: 
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CommitList"
        404:
          description: "Not found"
          
  "/projects/{projectSlug}/commits":
    parameters: 
    - name: "projectSlug"
      in: "path"
      description: "The project slug"
      type: "string"
      required: true
    get:
      tags:
      - "commit"
      summary: "Gets commits for a project"
      operationId: "getCommitsForProject"
      security: 
      - Bearer: []
      parameters:
      - in: "query"
        name: "limit"
        type: "integer"
        description: "The numbers of items to return"
      - in: "query"
        name: "page"
        type: "integer"
        description: "The page of results to return"
      produces: 
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CommitList"
        404:
          description: "Not found"

securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"

definitions:
  # User
  User:
    type: "object"
    properties:
      username:
        type: "string"
  UserList:
    type: "object"
    properties:
      total:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/User"
  # Known Host
  KnownHost:
    type: "object"
    properties:
      id:
        type: "string"
      hosts:
        type: "array"
        items:
          type: "string"
      comment:
        type: "string"
      sha256:
        type: "string"
      md5:
        type: "string"
  KnownHostList:
    type: "object"
    properties:
      total:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/KnownHost"
  # Project
  Project:
    type: "object"
    properties:
      id:
        type: "string"
      slug:
        type: "string"
      name:
        type: "string"
      repository:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      synchronising:
        type: "boolean"
  ProjectList:
    type: "object"
    properties:
      total:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Project"
  # Branch
  Branch:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      lastUpdated:
        type: "string"
        format: "date-time"
      active:
        type: "boolean"
  BranchList:
    type: "object"
    properties:
      total:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Branch"
  # Commit
  Commit:
    type: "object"
    properties:
      id:
        type: "string"
      hash:
        type: "string"
      author:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      message:
        type: "string"
      branches:
        type: "array"
        items:
          type: "string"
  CommitList:
    type: "object"
    properties:
      total: 
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Commit"
      
