swagger: "2.0"
externalDocs:
  description: "Velocity CI"
  url: "https://velocityci.io"
info:
  description: "This is the API specification for Velocity CI's Architect component."
  version: "1.0.0"
  title: "Velocity CI"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
basePath: "/v1"
schemes:
- "http"
paths:
  /users:
    get:
      summary: "List users"
      operationId: "listUsers"
      tags:
        - "user"
      security:
      - Bearer: []
      parameters:
      - in: query
        name: limit
        type: integer
        description: The numbers of items to return
      - in: query
        name: page
        type: integer
        description: The page of results to return
      produces:
      - "application/json"
      responses:
        200: 
          description: "OK"
          schema:
            $ref: "#/definitions/UserList"
    post:
      summary: "Create user"
      tags:
      - "user"
      operationId: "createUser"
      security:
      - Bearer: []
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "The user to create"
        schema:
          type: "object"
          required:
            - "username"
            - "password"
          properties:
            username:
              type: "string"
            password:
              type: "string"
      responses:
        201:
          description: "The created user"
          schema:
            $ref: "#/definitions/User"
          
  /users/{username}:
    parameters:
        - name: "username"
          in: "path"
          description: "The username"
          type: "string"
          required: true
    get:
      tags:
      - "user"
      summary: "Get user by username"
      operationId: "getUserByUsername"
      security:
      - Bearer: []
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "User not found"
    delete:
      summary: "Delete user"
      description: "This can only be done by the logged in user"
      operationId: "deleteUser"
      security:
      - Bearer: []
      tags:
      - "user"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
        404:
          description: "User not found"

securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"

definitions:
  User:
    type: "object"
    properties:
      username:
        type: "string"
  UserList:
    type: "object"
    properties:
      total:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/User"
