// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/v1/builder.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BreakResponse_Type int32

const (
	BreakResponse_HEARTBEAT BreakResponse_Type = 0
	BreakResponse_TASK      BreakResponse_Type = 1
)

var BreakResponse_Type_name = map[int32]string{
	0: "HEARTBEAT",
	1: "TASK",
}

var BreakResponse_Type_value = map[string]int32{
	"HEARTBEAT": 0,
	"TASK":      1,
}

func (x BreakResponse_Type) String() string {
	return proto.EnumName(BreakResponse_Type_name, int32(x))
}

func (BreakResponse_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6fac825076391829, []int{3, 0}
}

type RegisterRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fac825076391829, []int{0}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

type RegisterResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fac825076391829, []int{1}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Heartbeat struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fac825076391829, []int{2}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type BreakResponse struct {
	Type      BreakResponse_Type   `protobuf:"varint,1,opt,name=type,proto3,enum=velocity.v1.BreakResponse_Type" json:"type,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*BreakResponse_Heartbeat
	//	*BreakResponse_Task
	Data                 isBreakResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BreakResponse) Reset()         { *m = BreakResponse{} }
func (m *BreakResponse) String() string { return proto.CompactTextString(m) }
func (*BreakResponse) ProtoMessage()    {}
func (*BreakResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fac825076391829, []int{3}
}

func (m *BreakResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BreakResponse.Unmarshal(m, b)
}
func (m *BreakResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BreakResponse.Marshal(b, m, deterministic)
}
func (m *BreakResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BreakResponse.Merge(m, src)
}
func (m *BreakResponse) XXX_Size() int {
	return xxx_messageInfo_BreakResponse.Size(m)
}
func (m *BreakResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BreakResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BreakResponse proto.InternalMessageInfo

func (m *BreakResponse) GetType() BreakResponse_Type {
	if m != nil {
		return m.Type
	}
	return BreakResponse_HEARTBEAT
}

func (m *BreakResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type isBreakResponse_Data interface {
	isBreakResponse_Data()
}

type BreakResponse_Heartbeat struct {
	Heartbeat bool `protobuf:"varint,100,opt,name=heartbeat,proto3,oneof"`
}

type BreakResponse_Task struct {
	Task *Task `protobuf:"bytes,101,opt,name=task,proto3,oneof"`
}

func (*BreakResponse_Heartbeat) isBreakResponse_Data() {}

func (*BreakResponse_Task) isBreakResponse_Data() {}

func (m *BreakResponse) GetData() isBreakResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BreakResponse) GetHeartbeat() bool {
	if x, ok := m.GetData().(*BreakResponse_Heartbeat); ok {
		return x.Heartbeat
	}
	return false
}

func (m *BreakResponse) GetTask() *Task {
	if x, ok := m.GetData().(*BreakResponse_Task); ok {
		return x.Task
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BreakResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BreakResponse_Heartbeat)(nil),
		(*BreakResponse_Task)(nil),
	}
}

type LogsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogsRequest) Reset()         { *m = LogsRequest{} }
func (m *LogsRequest) String() string { return proto.CompactTextString(m) }
func (*LogsRequest) ProtoMessage()    {}
func (*LogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fac825076391829, []int{4}
}

func (m *LogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsRequest.Unmarshal(m, b)
}
func (m *LogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsRequest.Marshal(b, m, deterministic)
}
func (m *LogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsRequest.Merge(m, src)
}
func (m *LogsRequest) XXX_Size() int {
	return xxx_messageInfo_LogsRequest.Size(m)
}
func (m *LogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogsRequest proto.InternalMessageInfo

type LogsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogsResponse) Reset()         { *m = LogsResponse{} }
func (m *LogsResponse) String() string { return proto.CompactTextString(m) }
func (*LogsResponse) ProtoMessage()    {}
func (*LogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fac825076391829, []int{5}
}

func (m *LogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsResponse.Unmarshal(m, b)
}
func (m *LogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsResponse.Marshal(b, m, deterministic)
}
func (m *LogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsResponse.Merge(m, src)
}
func (m *LogsResponse) XXX_Size() int {
	return xxx_messageInfo_LogsResponse.Size(m)
}
func (m *LogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("velocity.v1.BreakResponse_Type", BreakResponse_Type_name, BreakResponse_Type_value)
	proto.RegisterType((*RegisterRequest)(nil), "velocity.v1.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "velocity.v1.RegisterResponse")
	proto.RegisterType((*Heartbeat)(nil), "velocity.v1.Heartbeat")
	proto.RegisterType((*BreakResponse)(nil), "velocity.v1.BreakResponse")
	proto.RegisterType((*LogsRequest)(nil), "velocity.v1.LogsRequest")
	proto.RegisterType((*LogsResponse)(nil), "velocity.v1.LogsResponse")
}

func init() { proto.RegisterFile("api/proto/v1/builder.proto", fileDescriptor_6fac825076391829) }

var fileDescriptor_6fac825076391829 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x41, 0x8f, 0xd3, 0x30,
	0x10, 0x85, 0xe3, 0x55, 0x58, 0x35, 0x53, 0x5a, 0xba, 0x16, 0x82, 0x62, 0x01, 0x5d, 0xf9, 0x42,
	0x4f, 0x2e, 0xed, 0x5e, 0xb8, 0x26, 0x52, 0xa4, 0x20, 0x38, 0x20, 0x6f, 0x4e, 0xdc, 0x9c, 0xed,
	0x90, 0x8d, 0xd2, 0xae, 0x43, 0xec, 0x44, 0xea, 0x0f, 0xe6, 0xce, 0x4f, 0x40, 0x8d, 0x95, 0x76,
	0x83, 0xd8, 0x03, 0x47, 0xcf, 0x7c, 0x7a, 0x7e, 0xf3, 0x1e, 0x30, 0x55, 0x15, 0xab, 0xaa, 0xd6,
	0x56, 0xaf, 0xda, 0xf5, 0x2a, 0x6b, 0x8a, 0xdd, 0x16, 0x6b, 0xd1, 0x0d, 0xe8, 0xb8, 0xc5, 0x9d,
	0xbe, 0x2b, 0xec, 0x41, 0xb4, 0x6b, 0xb6, 0xc8, 0xb5, 0xce, 0x77, 0xe8, 0xd8, 0xac, 0xf9, 0xb1,
	0xb2, 0xc5, 0x1e, 0x8d, 0x55, 0xfb, 0xca, 0xd1, 0xec, 0xf5, 0x40, 0xc9, 0x2a, 0x53, 0xba, 0x05,
	0xbf, 0x82, 0x17, 0x12, 0xf3, 0xc2, 0x58, 0xac, 0x25, 0xfe, 0x6c, 0xd0, 0x58, 0xbe, 0x84, 0xd9,
	0x79, 0x64, 0x2a, 0xfd, 0x60, 0x90, 0xbe, 0x84, 0x67, 0x56, 0x97, 0xf8, 0x30, 0x27, 0xd7, 0x64,
	0x19, 0x48, 0xf7, 0xe0, 0x31, 0x04, 0x09, 0xaa, 0xda, 0x66, 0xa8, 0x2c, 0xfd, 0x04, 0xc1, 0xe9,
	0xd7, 0x0e, 0x1b, 0x6f, 0x98, 0x70, 0xbe, 0x44, 0xef, 0x4b, 0xa4, 0x3d, 0x21, 0xcf, 0x30, 0xff,
	0x4d, 0x60, 0x12, 0xd5, 0xa8, 0xca, 0xd3, 0x77, 0x37, 0xe0, 0xdb, 0x43, 0x85, 0x9d, 0xcc, 0x74,
	0xb3, 0x10, 0x8f, 0x6e, 0x15, 0x03, 0x52, 0xa4, 0x87, 0x0a, 0x65, 0x07, 0x0f, 0x0d, 0x5c, 0xfc,
	0x87, 0x01, 0xfa, 0x1e, 0x82, 0xfb, 0xfe, 0x8e, 0xf9, 0xf6, 0x9a, 0x2c, 0x47, 0x89, 0x27, 0xcf,
	0x23, 0xfa, 0x01, 0xfc, 0x63, 0x64, 0x73, 0xec, 0x44, 0xaf, 0x06, 0x76, 0x52, 0x65, 0xca, 0xc4,
	0x93, 0x1d, 0xc0, 0x17, 0xe0, 0x1f, 0x0d, 0xd1, 0x09, 0x04, 0x49, 0x1c, 0xca, 0x34, 0x8a, 0xc3,
	0x74, 0xe6, 0xd1, 0x11, 0xf8, 0x69, 0x78, 0xfb, 0x65, 0x46, 0xa2, 0x4b, 0xf0, 0xb7, 0xca, 0x2a,
	0x3e, 0x81, 0xf1, 0x57, 0x9d, 0x9b, 0x3e, 0xf2, 0x29, 0x3c, 0x77, 0x4f, 0x77, 0xd5, 0xe6, 0x17,
	0x81, 0x69, 0xe4, 0xea, 0xbe, 0xc5, 0xba, 0x2d, 0xee, 0x90, 0x7e, 0x86, 0x51, 0xdf, 0x0a, 0x7d,
	0x3b, 0x70, 0xf0, 0x57, 0x7f, 0xec, 0xdd, 0x13, 0x5b, 0xa7, 0xcd, 0x3d, 0x1a, 0x43, 0xe0, 0x42,
	0xd4, 0x7a, 0x4f, 0x5f, 0x0d, 0xe8, 0x53, 0x9d, 0x8c, 0x3d, 0x1d, 0x3a, 0xf7, 0x96, 0xe4, 0x23,
	0xa1, 0x21, 0x8c, 0xbe, 0x35, 0xe6, 0xfe, 0x68, 0x9c, 0xce, 0x07, 0xf4, 0xa3, 0xd3, 0xd8, 0x9b,
	0x7f, 0x6c, 0x7a, 0x99, 0xc8, 0xff, 0x7e, 0xd1, 0xae, 0xb3, 0xcb, 0xae, 0x9d, 0x9b, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x79, 0x74, 0xab, 0x0f, 0xef, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BuilderServiceClient is the client API for BuilderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuilderServiceClient interface {
	// builder register on start
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	// Where idle builders go. This is used for heartbeats, and receiving tasks
	BreakRoom(ctx context.Context, opts ...grpc.CallOption) (BuilderService_BreakRoomClient, error)
	PushLogs(ctx context.Context, in *LogsRequest, opts ...grpc.CallOption) (*LogsResponse, error)
}

type builderServiceClient struct {
	cc *grpc.ClientConn
}

func NewBuilderServiceClient(cc *grpc.ClientConn) BuilderServiceClient {
	return &builderServiceClient{cc}
}

func (c *builderServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/velocity.v1.BuilderService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *builderServiceClient) BreakRoom(ctx context.Context, opts ...grpc.CallOption) (BuilderService_BreakRoomClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BuilderService_serviceDesc.Streams[0], "/velocity.v1.BuilderService/BreakRoom", opts...)
	if err != nil {
		return nil, err
	}
	x := &builderServiceBreakRoomClient{stream}
	return x, nil
}

type BuilderService_BreakRoomClient interface {
	Send(*Heartbeat) error
	Recv() (*BreakResponse, error)
	grpc.ClientStream
}

type builderServiceBreakRoomClient struct {
	grpc.ClientStream
}

func (x *builderServiceBreakRoomClient) Send(m *Heartbeat) error {
	return x.ClientStream.SendMsg(m)
}

func (x *builderServiceBreakRoomClient) Recv() (*BreakResponse, error) {
	m := new(BreakResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *builderServiceClient) PushLogs(ctx context.Context, in *LogsRequest, opts ...grpc.CallOption) (*LogsResponse, error) {
	out := new(LogsResponse)
	err := c.cc.Invoke(ctx, "/velocity.v1.BuilderService/PushLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuilderServiceServer is the server API for BuilderService service.
type BuilderServiceServer interface {
	// builder register on start
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	// Where idle builders go. This is used for heartbeats, and receiving tasks
	BreakRoom(BuilderService_BreakRoomServer) error
	PushLogs(context.Context, *LogsRequest) (*LogsResponse, error)
}

// UnimplementedBuilderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBuilderServiceServer struct {
}

func (*UnimplementedBuilderServiceServer) Register(ctx context.Context, req *RegisterRequest) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedBuilderServiceServer) BreakRoom(srv BuilderService_BreakRoomServer) error {
	return status.Errorf(codes.Unimplemented, "method BreakRoom not implemented")
}
func (*UnimplementedBuilderServiceServer) PushLogs(ctx context.Context, req *LogsRequest) (*LogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushLogs not implemented")
}

func RegisterBuilderServiceServer(s *grpc.Server, srv BuilderServiceServer) {
	s.RegisterService(&_BuilderService_serviceDesc, srv)
}

func _BuilderService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuilderServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/velocity.v1.BuilderService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuilderServiceServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuilderService_BreakRoom_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BuilderServiceServer).BreakRoom(&builderServiceBreakRoomServer{stream})
}

type BuilderService_BreakRoomServer interface {
	Send(*BreakResponse) error
	Recv() (*Heartbeat, error)
	grpc.ServerStream
}

type builderServiceBreakRoomServer struct {
	grpc.ServerStream
}

func (x *builderServiceBreakRoomServer) Send(m *BreakResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *builderServiceBreakRoomServer) Recv() (*Heartbeat, error) {
	m := new(Heartbeat)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BuilderService_PushLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuilderServiceServer).PushLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/velocity.v1.BuilderService/PushLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuilderServiceServer).PushLogs(ctx, req.(*LogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuilderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "velocity.v1.BuilderService",
	HandlerType: (*BuilderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _BuilderService_Register_Handler,
		},
		{
			MethodName: "PushLogs",
			Handler:    _BuilderService_PushLogs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BreakRoom",
			Handler:       _BuilderService_BreakRoom_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/proto/v1/builder.proto",
}
