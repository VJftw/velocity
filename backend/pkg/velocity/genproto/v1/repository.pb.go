// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repository.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Head struct {
	// projects/<project_id>/heads/<head_id>
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}
func (*Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{0}
}

func (m *Head) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Head.Unmarshal(m, b)
}
func (m *Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Head.Marshal(b, m, deterministic)
}
func (m *Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Head.Merge(m, src)
}
func (m *Head) XXX_Size() int {
	return xxx_messageInfo_Head.Size(m)
}
func (m *Head) XXX_DiscardUnknown() {
	xxx_messageInfo_Head.DiscardUnknown(m)
}

var xxx_messageInfo_Head proto.InternalMessageInfo

func (m *Head) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Commit struct {
	// projects/<project_id>/commits/<commit_id>
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{1}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Repository struct {
	Address              string     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	SshConfig            *SSHConfig `protobuf:"bytes,2,opt,name=ssh_config,json=sshConfig,proto3" json:"ssh_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{2}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Repository) GetSshConfig() *SSHConfig {
	if m != nil {
		return m.SshConfig
	}
	return nil
}

type SSHConfig struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	HostKey              string   `protobuf:"bytes,2,opt,name=host_key,json=hostKey,proto3" json:"host_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSHConfig) Reset()         { *m = SSHConfig{} }
func (m *SSHConfig) String() string { return proto.CompactTextString(m) }
func (*SSHConfig) ProtoMessage()    {}
func (*SSHConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{3}
}

func (m *SSHConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSHConfig.Unmarshal(m, b)
}
func (m *SSHConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSHConfig.Marshal(b, m, deterministic)
}
func (m *SSHConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSHConfig.Merge(m, src)
}
func (m *SSHConfig) XXX_Size() int {
	return xxx_messageInfo_SSHConfig.Size(m)
}
func (m *SSHConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SSHConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SSHConfig proto.InternalMessageInfo

func (m *SSHConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *SSHConfig) GetHostKey() string {
	if m != nil {
		return m.HostKey
	}
	return ""
}

func init() {
	proto.RegisterType((*Head)(nil), "velocity.v1.Head")
	proto.RegisterType((*Commit)(nil), "velocity.v1.Commit")
	proto.RegisterType((*Repository)(nil), "velocity.v1.Repository")
	proto.RegisterType((*SSHConfig)(nil), "velocity.v1.SSHConfig")
}

func init() { proto.RegisterFile("repository.proto", fileDescriptor_10d86afa5a89ec9d) }

var fileDescriptor_10d86afa5a89ec9d = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xc9, 0x52, 0xaa, 0x99, 0x80, 0xe8, 0x0a, 0x65, 0x3d, 0x59, 0x72, 0xea, 0x69, 0xa1,
	0x15, 0x5f, 0xc0, 0x1e, 0x2c, 0xf4, 0x96, 0xdc, 0x04, 0x29, 0x31, 0x3b, 0x9a, 0x41, 0xeb, 0x84,
	0x9d, 0x65, 0x61, 0xdf, 0x5e, 0x4c, 0x63, 0x14, 0xbc, 0xed, 0xff, 0x7f, 0xcb, 0x7c, 0xc3, 0xc0,
	0xa5, 0xc7, 0x9e, 0x85, 0x02, 0xfb, 0x64, 0x7b, 0xcf, 0x81, 0x75, 0x11, 0xf1, 0x83, 0x5b, 0x0a,
	0xc9, 0xc6, 0x75, 0xb9, 0x80, 0xd9, 0x0e, 0x1b, 0xa7, 0x2f, 0x40, 0x91, 0x33, 0xd9, 0x32, 0x5b,
	0xe5, 0x95, 0x22, 0x57, 0x1a, 0x98, 0x6f, 0xf9, 0x78, 0xa4, 0xf0, 0x8f, 0x3c, 0x03, 0x54, 0xd3,
	0x48, 0x6d, 0xe0, 0xac, 0x71, 0xce, 0xa3, 0xc8, 0xf8, 0xe5, 0x27, 0xea, 0x7b, 0x00, 0x91, 0xee,
	0xd0, 0xf2, 0xe7, 0x2b, 0xbd, 0x19, 0xb5, 0xcc, 0x56, 0xc5, 0x66, 0x61, 0xff, 0xb8, 0x6d, 0x5d,
	0xef, 0xb6, 0x03, 0xad, 0x72, 0x91, 0xee, 0xf4, 0x2c, 0x1f, 0x21, 0x9f, 0x7a, 0x7d, 0x0b, 0x45,
	0xef, 0x29, 0x36, 0x01, 0x0f, 0xef, 0x98, 0x46, 0x03, 0x8c, 0xd5, 0x1e, 0x93, 0xbe, 0x81, 0xf3,
	0x8e, 0x25, 0x0c, 0x54, 0x9d, 0xfc, 0xdf, 0x79, 0x8f, 0x69, 0x73, 0x0d, 0x57, 0xbf, 0x7b, 0xd6,
	0xe8, 0x23, 0xb5, 0xf8, 0x30, 0x7b, 0x52, 0x71, 0xfd, 0x32, 0x1f, 0x0e, 0x71, 0xf7, 0x15, 0x00,
	0x00, 0xff, 0xff, 0xda, 0x05, 0xf4, 0x4f, 0x1c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RepositoryServiceClient is the client API for RepositoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RepositoryServiceClient interface {
}

type repositoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewRepositoryServiceClient(cc *grpc.ClientConn) RepositoryServiceClient {
	return &repositoryServiceClient{cc}
}

// RepositoryServiceServer is the server API for RepositoryService service.
type RepositoryServiceServer interface {
}

// UnimplementedRepositoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRepositoryServiceServer struct {
}

func RegisterRepositoryServiceServer(s *grpc.Server, srv RepositoryServiceServer) {
	s.RegisterService(&_RepositoryService_serviceDesc, srv)
}

var _RepositoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "velocity.v1.RepositoryService",
	HandlerType: (*RepositoryServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "repository.proto",
}
