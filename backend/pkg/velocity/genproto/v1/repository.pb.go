// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repository.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RepoQuery_Type int32

const (
	RepoQuery_HEAD   RepoQuery_Type = 0
	RepoQuery_COMMIT RepoQuery_Type = 1
)

var RepoQuery_Type_name = map[int32]string{
	0: "HEAD",
	1: "COMMIT",
}

var RepoQuery_Type_value = map[string]int32{
	"HEAD":   0,
	"COMMIT": 1,
}

func (x RepoQuery_Type) String() string {
	return proto.EnumName(RepoQuery_Type_name, int32(x))
}

func (RepoQuery_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{6, 0}
}

type Head struct {
	// HEAD_ID=head_name
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId            string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}
func (*Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{0}
}

func (m *Head) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Head.Unmarshal(m, b)
}
func (m *Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Head.Marshal(b, m, deterministic)
}
func (m *Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Head.Merge(m, src)
}
func (m *Head) XXX_Size() int {
	return xxx_messageInfo_Head.Size(m)
}
func (m *Head) XXX_DiscardUnknown() {
	xxx_messageInfo_Head.DiscardUnknown(m)
}

var xxx_messageInfo_Head proto.InternalMessageInfo

func (m *Head) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Head) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type Commit struct {
	// COMMIT_ID=commit_sha
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId            string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{1}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Commit) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type Repository struct {
	Address              string     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	SshConfig            *SSHConfig `protobuf:"bytes,2,opt,name=ssh_config,json=sshConfig,proto3" json:"ssh_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{2}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Repository) GetSshConfig() *SSHConfig {
	if m != nil {
		return m.SshConfig
	}
	return nil
}

type SSHConfig struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	HostKey              string   `protobuf:"bytes,2,opt,name=host_key,json=hostKey,proto3" json:"host_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSHConfig) Reset()         { *m = SSHConfig{} }
func (m *SSHConfig) String() string { return proto.CompactTextString(m) }
func (*SSHConfig) ProtoMessage()    {}
func (*SSHConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{3}
}

func (m *SSHConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSHConfig.Unmarshal(m, b)
}
func (m *SSHConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSHConfig.Marshal(b, m, deterministic)
}
func (m *SSHConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSHConfig.Merge(m, src)
}
func (m *SSHConfig) XXX_Size() int {
	return xxx_messageInfo_SSHConfig.Size(m)
}
func (m *SSHConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SSHConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SSHConfig proto.InternalMessageInfo

func (m *SSHConfig) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *SSHConfig) GetHostKey() string {
	if m != nil {
		return m.HostKey
	}
	return ""
}

type GetHeadRequest struct {
	// The id of the project in the form of
	// `[PROJECT_ID]`.
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The id of the project in the form of
	// `[HEAD_ID]`.
	HeadId               string   `protobuf:"bytes,2,opt,name=head_id,json=headId,proto3" json:"head_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHeadRequest) Reset()         { *m = GetHeadRequest{} }
func (m *GetHeadRequest) String() string { return proto.CompactTextString(m) }
func (*GetHeadRequest) ProtoMessage()    {}
func (*GetHeadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{4}
}

func (m *GetHeadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHeadRequest.Unmarshal(m, b)
}
func (m *GetHeadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHeadRequest.Marshal(b, m, deterministic)
}
func (m *GetHeadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHeadRequest.Merge(m, src)
}
func (m *GetHeadRequest) XXX_Size() int {
	return xxx_messageInfo_GetHeadRequest.Size(m)
}
func (m *GetHeadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHeadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHeadRequest proto.InternalMessageInfo

func (m *GetHeadRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetHeadRequest) GetHeadId() string {
	if m != nil {
		return m.HeadId
	}
	return ""
}

type GetCommitRequest struct {
	// The id of the project in the form of
	// `[PROJECT_ID]`.
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The id of the commit in the form of
	// `[COMMIT_ID]`.
	CommitId             string   `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitRequest) Reset()         { *m = GetCommitRequest{} }
func (m *GetCommitRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommitRequest) ProtoMessage()    {}
func (*GetCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{5}
}

func (m *GetCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitRequest.Unmarshal(m, b)
}
func (m *GetCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitRequest.Marshal(b, m, deterministic)
}
func (m *GetCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitRequest.Merge(m, src)
}
func (m *GetCommitRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommitRequest.Size(m)
}
func (m *GetCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitRequest proto.InternalMessageInfo

func (m *GetCommitRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetCommitRequest) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

type RepoQuery struct {
	Type                 RepoQuery_Type `protobuf:"varint,1,opt,name=type,proto3,enum=velocity.v1.RepoQuery_Type" json:"type,omitempty"`
	Ids                  []string       `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RepoQuery) Reset()         { *m = RepoQuery{} }
func (m *RepoQuery) String() string { return proto.CompactTextString(m) }
func (*RepoQuery) ProtoMessage()    {}
func (*RepoQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{6}
}

func (m *RepoQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepoQuery.Unmarshal(m, b)
}
func (m *RepoQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepoQuery.Marshal(b, m, deterministic)
}
func (m *RepoQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepoQuery.Merge(m, src)
}
func (m *RepoQuery) XXX_Size() int {
	return xxx_messageInfo_RepoQuery.Size(m)
}
func (m *RepoQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_RepoQuery.DiscardUnknown(m)
}

var xxx_messageInfo_RepoQuery proto.InternalMessageInfo

func (m *RepoQuery) GetType() RepoQuery_Type {
	if m != nil {
		return m.Type
	}
	return RepoQuery_HEAD
}

func (m *RepoQuery) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ListHeadsRequest struct {
	// The id of the project in the form of
	// `[PROJECT_ID]`.
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The ids of the commits in the form of
	// `[COMMIT_ID]`.
	CommitIds            []string   `protobuf:"bytes,2,rep,name=commit_ids,json=commitIds,proto3" json:"commit_ids,omitempty"`
	PageQuery            *PageQuery `protobuf:"bytes,99,opt,name=page_query,json=pageQuery,proto3" json:"page_query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListHeadsRequest) Reset()         { *m = ListHeadsRequest{} }
func (m *ListHeadsRequest) String() string { return proto.CompactTextString(m) }
func (*ListHeadsRequest) ProtoMessage()    {}
func (*ListHeadsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{7}
}

func (m *ListHeadsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHeadsRequest.Unmarshal(m, b)
}
func (m *ListHeadsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHeadsRequest.Marshal(b, m, deterministic)
}
func (m *ListHeadsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHeadsRequest.Merge(m, src)
}
func (m *ListHeadsRequest) XXX_Size() int {
	return xxx_messageInfo_ListHeadsRequest.Size(m)
}
func (m *ListHeadsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHeadsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListHeadsRequest proto.InternalMessageInfo

func (m *ListHeadsRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ListHeadsRequest) GetCommitIds() []string {
	if m != nil {
		return m.CommitIds
	}
	return nil
}

func (m *ListHeadsRequest) GetPageQuery() *PageQuery {
	if m != nil {
		return m.PageQuery
	}
	return nil
}

type ListHeadsResponse struct {
	Heads                []*Head  `protobuf:"bytes,1,rep,name=heads,proto3" json:"heads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListHeadsResponse) Reset()         { *m = ListHeadsResponse{} }
func (m *ListHeadsResponse) String() string { return proto.CompactTextString(m) }
func (*ListHeadsResponse) ProtoMessage()    {}
func (*ListHeadsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{8}
}

func (m *ListHeadsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHeadsResponse.Unmarshal(m, b)
}
func (m *ListHeadsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHeadsResponse.Marshal(b, m, deterministic)
}
func (m *ListHeadsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHeadsResponse.Merge(m, src)
}
func (m *ListHeadsResponse) XXX_Size() int {
	return xxx_messageInfo_ListHeadsResponse.Size(m)
}
func (m *ListHeadsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHeadsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListHeadsResponse proto.InternalMessageInfo

func (m *ListHeadsResponse) GetHeads() []*Head {
	if m != nil {
		return m.Heads
	}
	return nil
}

type ListCommitsRequest struct {
	// The id of the project in the form of
	// `[PROJECT_ID]`.
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The ids of the heads in the form of
	// `[HEAD_ID]`.
	HeadIds              []string   `protobuf:"bytes,2,rep,name=head_ids,json=headIds,proto3" json:"head_ids,omitempty"`
	PageQuery            *PageQuery `protobuf:"bytes,99,opt,name=page_query,json=pageQuery,proto3" json:"page_query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListCommitsRequest) Reset()         { *m = ListCommitsRequest{} }
func (m *ListCommitsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommitsRequest) ProtoMessage()    {}
func (*ListCommitsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{9}
}

func (m *ListCommitsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommitsRequest.Unmarshal(m, b)
}
func (m *ListCommitsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommitsRequest.Marshal(b, m, deterministic)
}
func (m *ListCommitsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommitsRequest.Merge(m, src)
}
func (m *ListCommitsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCommitsRequest.Size(m)
}
func (m *ListCommitsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommitsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommitsRequest proto.InternalMessageInfo

func (m *ListCommitsRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ListCommitsRequest) GetHeadIds() []string {
	if m != nil {
		return m.HeadIds
	}
	return nil
}

func (m *ListCommitsRequest) GetPageQuery() *PageQuery {
	if m != nil {
		return m.PageQuery
	}
	return nil
}

type ListCommitsResponse struct {
	Commits              []*Commit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListCommitsResponse) Reset()         { *m = ListCommitsResponse{} }
func (m *ListCommitsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCommitsResponse) ProtoMessage()    {}
func (*ListCommitsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10d86afa5a89ec9d, []int{10}
}

func (m *ListCommitsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommitsResponse.Unmarshal(m, b)
}
func (m *ListCommitsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommitsResponse.Marshal(b, m, deterministic)
}
func (m *ListCommitsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommitsResponse.Merge(m, src)
}
func (m *ListCommitsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCommitsResponse.Size(m)
}
func (m *ListCommitsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommitsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommitsResponse proto.InternalMessageInfo

func (m *ListCommitsResponse) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

func init() {
	proto.RegisterEnum("velocity.v1.RepoQuery_Type", RepoQuery_Type_name, RepoQuery_Type_value)
	proto.RegisterType((*Head)(nil), "velocity.v1.Head")
	proto.RegisterType((*Commit)(nil), "velocity.v1.Commit")
	proto.RegisterType((*Repository)(nil), "velocity.v1.Repository")
	proto.RegisterType((*SSHConfig)(nil), "velocity.v1.SSHConfig")
	proto.RegisterType((*GetHeadRequest)(nil), "velocity.v1.GetHeadRequest")
	proto.RegisterType((*GetCommitRequest)(nil), "velocity.v1.GetCommitRequest")
	proto.RegisterType((*RepoQuery)(nil), "velocity.v1.RepoQuery")
	proto.RegisterType((*ListHeadsRequest)(nil), "velocity.v1.ListHeadsRequest")
	proto.RegisterType((*ListHeadsResponse)(nil), "velocity.v1.ListHeadsResponse")
	proto.RegisterType((*ListCommitsRequest)(nil), "velocity.v1.ListCommitsRequest")
	proto.RegisterType((*ListCommitsResponse)(nil), "velocity.v1.ListCommitsResponse")
}

func init() { proto.RegisterFile("repository.proto", fileDescriptor_10d86afa5a89ec9d) }

var fileDescriptor_10d86afa5a89ec9d = []byte{
	// 492 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4b, 0x6f, 0x13, 0x31,
	0x10, 0x66, 0x93, 0x90, 0xc4, 0x13, 0x29, 0xda, 0xba, 0x12, 0x84, 0x3e, 0x44, 0xe5, 0x0b, 0xb9,
	0x90, 0xa8, 0x41, 0x15, 0x17, 0x2e, 0x90, 0xa2, 0x24, 0x2a, 0xe5, 0xb1, 0xed, 0x09, 0x09, 0x45,
	0x26, 0x1e, 0x12, 0x43, 0xba, 0x76, 0xd7, 0x6e, 0xa4, 0xfd, 0x01, 0x88, 0xbf, 0x8d, 0x6c, 0xef,
	0xa6, 0x4d, 0xc5, 0x21, 0xf4, 0x66, 0xcf, 0xcc, 0x7e, 0xfe, 0x1e, 0xb3, 0x10, 0x67, 0xa8, 0x95,
	0x91, 0x56, 0x65, 0x79, 0x4f, 0x67, 0xca, 0x2a, 0xda, 0x5a, 0xe1, 0x52, 0xcd, 0xa4, 0xcd, 0x7b,
	0xab, 0xe3, 0x3d, 0xc2, 0xb5, 0x0c, 0xf5, 0xbd, 0x83, 0xb9, 0x52, 0xf3, 0x25, 0xf6, 0xb9, 0x96,
	0x7d, 0x9e, 0xa6, 0xca, 0x72, 0x2b, 0x55, 0x6a, 0x42, 0x97, 0x9d, 0x40, 0x6d, 0x8c, 0x5c, 0xd0,
	0x36, 0x54, 0xa4, 0xe8, 0x44, 0x47, 0x51, 0x97, 0x24, 0x15, 0x29, 0xe8, 0x21, 0x80, 0xce, 0xd4,
	0x4f, 0x9c, 0xd9, 0xa9, 0x14, 0x9d, 0x8a, 0xaf, 0x93, 0xa2, 0x32, 0x11, 0xec, 0x35, 0xd4, 0x87,
	0xea, 0xea, 0x4a, 0xda, 0xff, 0xfd, 0xf0, 0x1b, 0x40, 0xb2, 0x66, 0x4e, 0x3b, 0xd0, 0xe0, 0x42,
	0x64, 0x68, 0x4c, 0x81, 0x50, 0x5e, 0xe9, 0x09, 0x80, 0x31, 0x8b, 0xe9, 0x4c, 0xa5, 0x3f, 0xe4,
	0xdc, 0xc3, 0xb4, 0x06, 0x4f, 0x7a, 0x77, 0x24, 0xf6, 0x2e, 0x2e, 0xc6, 0x43, 0xdf, 0x4d, 0x88,
	0x31, 0x8b, 0x70, 0x64, 0x23, 0x20, 0xeb, 0x3a, 0x7d, 0x0e, 0x2d, 0x9d, 0xc9, 0x15, 0xb7, 0x38,
	0xfd, 0x85, 0x79, 0xf1, 0x02, 0x14, 0xa5, 0x33, 0xcc, 0xe9, 0x33, 0x68, 0x2e, 0x94, 0xb1, 0xbe,
	0x1b, 0x98, 0x36, 0xdc, 0xfd, 0x0c, 0x73, 0x36, 0x86, 0xf6, 0x08, 0xad, 0xb3, 0x26, 0xc1, 0xeb,
	0x1b, 0x34, 0xf6, 0x9e, 0xb0, 0xe8, 0x9e, 0x30, 0xfa, 0x14, 0x1a, 0x0b, 0xe4, 0xe2, 0x56, 0x74,
	0xdd, 0x5d, 0x27, 0x82, 0x7d, 0x84, 0x78, 0x84, 0x36, 0xb8, 0xb5, 0x25, 0xd6, 0x3e, 0x90, 0x99,
	0x9f, 0xbf, 0x45, 0x6b, 0x86, 0xc2, 0x44, 0xb0, 0x25, 0x10, 0xe7, 0xe0, 0x97, 0x1b, 0xcc, 0x72,
	0xda, 0x87, 0x9a, 0xcd, 0x35, 0x7a, 0x88, 0xf6, 0x60, 0x7f, 0xc3, 0xa0, 0xf5, 0x54, 0xef, 0x32,
	0xd7, 0x98, 0xf8, 0x41, 0x1a, 0x43, 0x55, 0x0a, 0xd3, 0xa9, 0x1c, 0x55, 0xbb, 0x24, 0x71, 0x47,
	0x76, 0x00, 0x35, 0xd7, 0xa7, 0x4d, 0xa8, 0x8d, 0xdf, 0xbf, 0x3d, 0x8d, 0x1f, 0x51, 0x80, 0xfa,
	0xf0, 0xd3, 0xf9, 0xf9, 0xe4, 0x32, 0x8e, 0xd8, 0x9f, 0x08, 0xe2, 0x0f, 0xd2, 0x78, 0x27, 0xcc,
	0x96, 0xf4, 0x0f, 0x01, 0xd6, 0xf4, 0xcb, 0xa7, 0x48, 0xc9, 0xdf, 0x47, 0xab, 0xf9, 0x1c, 0xa7,
	0xd7, 0x8e, 0x5b, 0x67, 0xf6, 0x8f, 0x68, 0x3f, 0xf3, 0x39, 0x7a, 0xe6, 0x09, 0xd1, 0xe5, 0x91,
	0xbd, 0x81, 0x9d, 0x3b, 0x44, 0x8c, 0x56, 0xa9, 0x41, 0xfa, 0x02, 0x1e, 0x3b, 0x9b, 0xdd, 0xfa,
	0x54, 0xbb, 0xad, 0xc1, 0xce, 0x06, 0x8c, 0x4f, 0x2f, 0xf4, 0xd9, 0xef, 0x08, 0xa8, 0xfb, 0x3c,
	0xe4, 0xb0, 0xad, 0x12, 0xb7, 0x20, 0x21, 0xd4, 0x52, 0x47, 0x23, 0xa4, 0xfa, 0x60, 0x15, 0xa7,
	0xb0, 0xbb, 0x41, 0xa3, 0xd0, 0xf1, 0x12, 0x1a, 0xc1, 0xa0, 0x52, 0xc9, 0xee, 0x06, 0x54, 0xb1,
	0x3d, 0xe5, 0xcc, 0xbb, 0xda, 0xd7, 0xca, 0xea, 0xf8, 0x7b, 0xdd, 0xff, 0xc2, 0xaf, 0xfe, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x3b, 0xcb, 0xa5, 0xb8, 0x0c, 0x04, 0x00, 0x00,
}
